{"version":3,"sources":["utils.js","App.js","reportWebVitals.js","index.js"],"names":["findMaxBenefit","prices","maxBenefit","buyIndex","sellIndex","i","length","j","benefit","findDatesPrices","data","map","item","App","useState","financialData","setFinancialData","startDate","setStartDate","endDate","setEndDate","totalVolumes","setTotalVolumes","maxVolume","setMaxVolume","downwardSpan","setDownwardSpan","maxPriceDate","setMaxPriceDate","minPriceDate","setMinPriceDate","maxVolumeDate","setMaxVolumeDate","canTrade","setCanTrade","showTrade","setShowTrade","showVolume","setShowVolume","showDown","setShowDown","dataLoaded","setDataLoaded","message","setMessage","loadMessage","setLoadMessage","handleSubmit","e","fetchData","a","axios","get","resp","console","log","filterEntries","total_volumes","error","preventDefault","list","uniqueDays","uniqueEntries","forEach","index","dateDate","Date","toDateString","indexOf","push","convertDate","date","parseInt","getTime","toFixed","convertToISO","stampDate","toLocaleDateString","handleFindVolume","maxVolInfo","totalVol","dates","volumes","maximumVolume","Math","max","findMaxVolume","maximumVolumeDate","ifOnlyDownward","n_current","handleFindSell","minPrice","findMinPrice","maxDate","findMaxPrice","className","style","color","onSubmit","handleSubmitAndFilter","type","placeholder","onInput","target","value","handleSetStart","required","newEndDate","handleSetEnd","fontWeight","onClick","down","n_max","findLongestDownward","handleFindDownward","impossible","handleShouldBuyOrSell","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e98f816.chunk.js","sourcesContent":["export const findLongestDownward = (data) => {\r\n  const prices = data.map((item) => item[1]);\r\n  let n_max = 0;\r\n  let n_current = 0;\r\n  for (let i = 0; i < prices.length; i++) {\r\n    while (prices[i] > prices[i + 1]) {\r\n      ++n_current;\r\n      i++;\r\n    }\r\n\r\n    if (n_current > n_max) {\r\n      n_max = n_current;\r\n    }\r\n    n_current = 0;\r\n  }\r\n  return n_max;\r\n};\r\n\r\nexport const findMaxVolume = (totalVol) => {\r\n  const dates = totalVol.map((item) => item[0]);\r\n  const volumes = totalVol.map((item) => item[1]);\r\n  let maximumVolume = Math.max(...volumes);\r\n  const maxVolumeIndex = volumes.indexOf(maximumVolume);\r\n  let maximumVolumeDate = dates[maxVolumeIndex];\r\n\r\n  return [maximumVolume, maximumVolumeDate];\r\n\r\n  //   console.log(\"MAX VOLUME AND DATE\", maxVolume, maxVolumeDate);\r\n};\r\n\r\nexport const findMaxBenefit = (prices) => {\r\n  let maxBenefit = 0;\r\n  let buyIndex = -1;\r\n  let sellIndex = -1;\r\n  for (let i = 0; i < prices.length; i++) {\r\n    for (let j = i; j < prices.length; j++) {\r\n      const benefit = prices[j] - prices[i];\r\n      if (benefit > maxBenefit) {\r\n        maxBenefit = benefit;\r\n        buyIndex = i;\r\n        sellIndex = j;\r\n      }\r\n    }\r\n  }\r\n  return [buyIndex, sellIndex];\r\n};\r\n\r\nexport const findDatesPrices = (data) => {\r\n  const dates = data.map((item) => item[0]);\r\n  const prices = data.map((item) => item[1]);\r\n  return [dates, prices];\r\n};\r\n\r\nexport const findMaxPrice = (data) => {\r\n  const dates = findDatesPrices(data)[0];\r\n  const prices = findDatesPrices(data)[1];\r\n  const maxIndex = findMaxBenefit(prices)[1];\r\n  let maximumPriceDate = dates[maxIndex];\r\n  return maximumPriceDate;\r\n};\r\n\r\nexport const findMinPrice = (data) => {\r\n  const dates = findDatesPrices(data)[0];\r\n  const prices = findDatesPrices(data)[1];\r\n  const minIndex = findMaxBenefit(prices)[0];\r\n  let minimumPriceDate = dates[minIndex];\r\n  return minimumPriceDate;\r\n};\r\n","import \"./App.css\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  findLongestDownward,\r\n  findMaxVolume,\r\n  findMaxPrice,\r\n  findMinPrice,\r\n} from \"./utils\";\r\n\r\nfunction App() {\r\n  const [financialData, setFinancialData] = useState([]);\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [totalVolumes, setTotalVolumes] = useState([]);\r\n  const [maxVolume, setMaxVolume] = useState(0);\r\n  const [downwardSpan, setDownwardSpan] = useState(\"\");\r\n  const [maxPriceDate, setMaxPriceDate] = useState(\"\");\r\n  const [minPriceDate, setMinPriceDate] = useState(\"\");\r\n  const [maxVolumeDate, setMaxVolumeDate] = useState(\"\");\r\n  const [canTrade, setCanTrade] = useState(true);\r\n  const [showTrade, setShowTrade] = useState(false);\r\n  const [showVolume, setShowVolume] = useState(false);\r\n  const [showDown, setShowDown] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loadMessage, setLoadMessage] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    async function fetchData() {\r\n      try {\r\n        const resp = await axios.get(\r\n          `https://api.coingecko.com/api/v3/coins/bitcoin/market_chart/range?vs_currency=eur&from=${\r\n            startDate + 3600\r\n          }&to=${endDate}`\r\n        );\r\n        console.log(resp.data);\r\n        setMessage(\"\");\r\n        setLoadMessage(\"\");\r\n        setFinancialData(filterEntries(resp.data.prices));\r\n        setTotalVolumes(filterEntries(resp.data.total_volumes));\r\n        console.log(\"DATA\", financialData);\r\n        console.log(\"VOLUMES\", totalVolumes);\r\n        setDataLoaded(true);\r\n        setLoadMessage(\"The data has NOT loaded, try to enter some dates\");\r\n      } catch (err) {\r\n        // Handle Error Here\r\n        console.error(err);\r\n        setMessage(\"Data not loaded, try entering some dates\");\r\n      }\r\n    }\r\n    fetchData();\r\n  };\r\n\r\n  const filterEntries = (list) => {\r\n    const uniqueDays = [];\r\n    const uniqueEntries = [];\r\n    console.log(\"LIST TO FILTER:\", list);\r\n    list.forEach(function (item, index) {\r\n      const dateDate = new Date(item[0]).toDateString();\r\n\r\n      if (uniqueDays.indexOf(dateDate) < 0) {\r\n        uniqueDays.push(dateDate);\r\n        uniqueEntries.push(item);\r\n      }\r\n    });\r\n\r\n    console.log(\"UNIQUE ENTRIES\", uniqueEntries);\r\n    return uniqueEntries;\r\n  };\r\n\r\n  const handleSubmitAndFilter = (e) => {\r\n    setMessage(\"\");\r\n    setMaxVolume(0);\r\n    setShowTrade(false);\r\n    setDownwardSpan(\"\");\r\n    handleSubmit(e);\r\n  };\r\n  const convertDate = (date) => {\r\n    const stamp = parseInt((new Date(date).getTime() / 1000).toFixed(0));\r\n    return stamp;\r\n  };\r\n\r\n  const convertToISO = (stampDate) => {\r\n    const jsDate = new Date(stampDate).toLocaleDateString(\"ru-RU\");\r\n    return jsDate;\r\n  };\r\n\r\n  const handleSetStart = (e) => {\r\n    setStartDate(\"\");\r\n    setStartDate(convertDate(e.target.value));\r\n  };\r\n  const handleSetEnd = (e) => {\r\n    setEndDate(\"\");\r\n    const newEndDate = convertDate(e.target.value);\r\n    setEndDate(newEndDate);\r\n  };\r\n\r\n  //The maximum amount of days bitcoin’s price was decreasing (dayspan)\r\n  const handleFindDownward = () => {\r\n    setShowDown(true);\r\n    setShowVolume(false);\r\n    setShowTrade(false);\r\n    setMessage(\"\");\r\n    setMaxVolume(0);\r\n    if (dataLoaded) {\r\n      const down = findLongestDownward(financialData);\r\n      setDownwardSpan(down);\r\n    } else {\r\n      setMessage(\"Please enter some dates first for showing the trend\");\r\n    }\r\n  };\r\n\r\n  //The date with the highest trading volume and the volume (max total volume and corresponding date)\r\n  const handleFindVolume = () => {\r\n    setMessage(\"\");\r\n    setShowDown(false);\r\n    setShowTrade(false);\r\n    setShowVolume(true);\r\n    if (dataLoaded) {\r\n      setDownwardSpan(\"\");\r\n      const maxVolInfo = findMaxVolume(totalVolumes);\r\n      const maximumVolume = maxVolInfo[0];\r\n      const maximumVolumeDate = maxVolInfo[1];\r\n      setMaxVolume(maximumVolume);\r\n      setMaxVolumeDate(maximumVolumeDate);\r\n      console.log(maxVolumeDate);\r\n      console.log(convertToISO(maxVolumeDate));\r\n    } else {\r\n      setMessage(\"Please enter some dates first for showing volume\");\r\n    }\r\n  };\r\n\r\n  const handleShouldBuyOrSell = () => {\r\n    setMessage(\"\");\r\n    setShowTrade(true);\r\n    setShowDown(false);\r\n    setShowVolume(false);\r\n    const impossible = ifOnlyDownward();\r\n    if (dataLoaded) {\r\n      if (impossible) {\r\n        setCanTrade(false);\r\n      } else {\r\n        setCanTrade(true);\r\n        handleFindSell();\r\n      }\r\n    } else {\r\n      setMessage(\r\n        \"Please enter some dates first for showing buying and selling dates\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const ifOnlyDownward = () => {\r\n    // setCanTrade(true);\r\n    const prices = financialData.map((item) => item[1]);\r\n    let n_current = 0;\r\n\r\n    for (let i = 0; i < prices.length; i++) {\r\n      if (prices[i] < prices[i + 1]) {\r\n        n_current++;\r\n        i++;\r\n      }\r\n    }\r\n    if (n_current === 0) {\r\n      // setCanTrade(false);\r\n      return true;\r\n    } else if (n_current > 0) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  //A pair of days: The day to buy and the day to sell (max price sell, min price buy)\r\n  const handleFindSell = () => {\r\n    setMaxVolume(0);\r\n    setShowDown(false);\r\n    setShowVolume(false);\r\n    setDownwardSpan(\"\");\r\n    const minPrice = findMinPrice(financialData);\r\n    setMinPriceDate(minPrice);\r\n    const maxDate = findMaxPrice(financialData);\r\n    setMaxPriceDate(maxDate);\r\n  };\r\n\r\n  //If the price only decreases in the date range, warn to not buy and not sell\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"appParagraph\">\r\n        <h2 style={{ color: \"darkgreen\" }}>Bitcoin Data Analyzer</h2>\r\n        <p className=\"appTitle\">Set the date range</p>\r\n        <form onSubmit={(e) => handleSubmitAndFilter(e)}>\r\n          <input\r\n            className=\"formItem inputElement\"\r\n            type=\"date\"\r\n            placeholder=\"From\"\r\n            onInput={(e) => handleSetStart(e)}\r\n            required\r\n          />\r\n          <input\r\n            className=\"formItem inputElement\"\r\n            type=\"date\"\r\n            placeholder=\"To\"\r\n            onInput={(e) => handleSetEnd(e)}\r\n            required\r\n          />\r\n          <button className=\"formItem submitButton\" type=\"submit\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"appParagraph\">\r\n        {dataLoaded && financialData.length > 0 ? (\r\n          <p style={{ color: \"green\", fontWeight: \"700\" }}>\r\n            {\" \"}\r\n            The data has loaded, choose what you want to know\r\n          </p>\r\n        ) : (\r\n          <p style={{ color: \"red\", fontWeight: \"700\" }}> {loadMessage}</p>\r\n        )}\r\n        <button\r\n          className=\"infoButton\"\r\n          onClick={() => {\r\n            handleFindDownward();\r\n          }}\r\n        >\r\n          Longest downward{\" \"}\r\n        </button>\r\n\r\n        <button\r\n          className=\"infoButton\"\r\n          onClick={() => {\r\n            handleFindVolume();\r\n          }}\r\n        >\r\n          Highest trading volume\r\n        </button>\r\n\r\n        <button\r\n          className=\"infoButton\"\r\n          onClick={() => {\r\n            handleShouldBuyOrSell();\r\n          }}\r\n        >\r\n          Sell and Buy\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"appParagraph\">\r\n        {showVolume &&\r\n          (maxVolume > 0 ? (\r\n            <div>\r\n              <p>\r\n                Max volume: {maxVolume.toFixed(2)} euros on{\" \"}\r\n                {convertToISO(maxVolumeDate)}\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <p>{message}</p>\r\n          ))}\r\n\r\n        {showTrade &&\r\n          (canTrade ? (\r\n            maxPriceDate ? (\r\n              <div>\r\n                {minPriceDate && (\r\n                  <p>Should buy: on {convertToISO(minPriceDate)}</p>\r\n                )}\r\n                {maxPriceDate && (\r\n                  <p>Should sell: on {convertToISO(maxPriceDate)}</p>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <p>{message}</p>\r\n            )\r\n          ) : (\r\n            <p>Deals are not profitable: the price only decreases</p>\r\n          ))}\r\n\r\n        {showDown &&\r\n          (downwardSpan ? (\r\n            <div>\r\n              <p>Longest downward span: {downwardSpan} days in a row</p>\r\n            </div>\r\n          ) : (\r\n            <p>{message}</p>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}